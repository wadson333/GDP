package com.ciatch.gdp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicalDocumentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalDocumentAllPropertiesEquals(MedicalDocument expected, MedicalDocument actual) {
        assertMedicalDocumentAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicalDocumentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalDocumentAllUpdatablePropertiesEquals(MedicalDocument expected, MedicalDocument actual) {
        assertMedicalDocumentUpdatableFieldsEquals(expected, actual);
        assertMedicalDocumentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalDocumentAutoGeneratedPropertiesEquals(MedicalDocument expected, MedicalDocument actual) {
        assertThat(expected)
            .as("Verify MedicalDocument auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalDocumentUpdatableFieldsEquals(MedicalDocument expected, MedicalDocument actual) {
        assertThat(expected)
            .as("Verify MedicalDocument relevant properties")
            .satisfies(e -> assertThat(e.getDocumentName()).as("check documentName").isEqualTo(actual.getDocumentName()))
            .satisfies(e -> assertThat(e.getDocumentDate()).as("check documentDate").isEqualTo(actual.getDocumentDate()))
            .satisfies(e -> assertThat(e.getFilePath()).as("check filePath").isEqualTo(actual.getFilePath()))
            .satisfies(e -> assertThat(e.getFileType()).as("check fileType").isEqualTo(actual.getFileType()))
            .satisfies(e -> assertThat(e.getDesc()).as("check desc").isEqualTo(actual.getDesc()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalDocumentUpdatableRelationshipsEquals(MedicalDocument expected, MedicalDocument actual) {
        assertThat(expected)
            .as("Verify MedicalDocument relationships")
            .satisfies(e -> assertThat(e.getPatient()).as("check patient").isEqualTo(actual.getPatient()));
    }
}
