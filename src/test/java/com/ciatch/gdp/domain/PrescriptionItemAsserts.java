package com.ciatch.gdp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PrescriptionItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrescriptionItemAllPropertiesEquals(PrescriptionItem expected, PrescriptionItem actual) {
        assertPrescriptionItemAutoGeneratedPropertiesEquals(expected, actual);
        assertPrescriptionItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrescriptionItemAllUpdatablePropertiesEquals(PrescriptionItem expected, PrescriptionItem actual) {
        assertPrescriptionItemUpdatableFieldsEquals(expected, actual);
        assertPrescriptionItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrescriptionItemAutoGeneratedPropertiesEquals(PrescriptionItem expected, PrescriptionItem actual) {
        assertThat(expected)
            .as("Verify PrescriptionItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrescriptionItemUpdatableFieldsEquals(PrescriptionItem expected, PrescriptionItem actual) {
        assertThat(expected)
            .as("Verify PrescriptionItem relevant properties")
            .satisfies(e -> assertThat(e.getDosage()).as("check dosage").isEqualTo(actual.getDosage()))
            .satisfies(e -> assertThat(e.getFrequency()).as("check frequency").isEqualTo(actual.getFrequency()))
            .satisfies(e -> assertThat(e.getDuration()).as("check duration").isEqualTo(actual.getDuration()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrescriptionItemUpdatableRelationshipsEquals(PrescriptionItem expected, PrescriptionItem actual) {
        assertThat(expected)
            .as("Verify PrescriptionItem relationships")
            .satisfies(e -> assertThat(e.getMedication()).as("check medication").isEqualTo(actual.getMedication()))
            .satisfies(e -> assertThat(e.getPrescription()).as("check prescription").isEqualTo(actual.getPrescription()));
    }
}
