package com.ciatch.gdp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserConfigurationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserConfigurationAllPropertiesEquals(UserConfiguration expected, UserConfiguration actual) {
        assertUserConfigurationAutoGeneratedPropertiesEquals(expected, actual);
        assertUserConfigurationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserConfigurationAllUpdatablePropertiesEquals(UserConfiguration expected, UserConfiguration actual) {
        assertUserConfigurationUpdatableFieldsEquals(expected, actual);
        assertUserConfigurationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserConfigurationAutoGeneratedPropertiesEquals(UserConfiguration expected, UserConfiguration actual) {
        assertThat(expected)
            .as("Verify UserConfiguration auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserConfigurationUpdatableFieldsEquals(UserConfiguration expected, UserConfiguration actual) {
        assertThat(expected)
            .as("Verify UserConfiguration relevant properties")
            .satisfies(e -> assertThat(e.getTwoFactorEnabled()).as("check twoFactorEnabled").isEqualTo(actual.getTwoFactorEnabled()))
            .satisfies(e -> assertThat(e.getTwoFactorSecret()).as("check twoFactorSecret").isEqualTo(actual.getTwoFactorSecret()))
            .satisfies(e -> assertThat(e.getReceiveEmailNotifs()).as("check receiveEmailNotifs").isEqualTo(actual.getReceiveEmailNotifs()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserConfigurationUpdatableRelationshipsEquals(UserConfiguration expected, UserConfiguration actual) {
        // empty method
    }
}
